name: build

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
    paths-ignore:
      - "**.md"

jobs:
  test-build:
    name: test & build
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.X
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Yarn
        run: npm install -g yarn@1.22.10

      - name: install
        run: yarn install --frozen-lockfile
        env:
          CI: true

      # - name: lint
      #   run: yarn lint
      #   env:
      #     CI: true
      # - name: test
      #   run: yarn test
      #   env:
      #     CI: true

      # - name: test Upper East api integrity
      #   run: cd packages/upper-east-client && yarn test:api-integrity || true
      #   env:
      #     CI: true
      #     UPPER_EAST_API_HOST: ${{ secrets.UPPER_EAST_API_HOST }}
      #     UPPER_EAST_API_KEY: ${{ secrets.UPPER_EAST_API_KEY }}
      #     NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build
        run: yarn build
        env:
          CI: true

  version:
    needs: test-build
    name: version
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'chore(deps-dev):')"
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.X
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Yarn
        run: npm install -g yarn@1.22.10

      - name: install
        run: yarn install --frozen-lockfile
        env:
          CI: true
          # NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build
        run: yarn lerna build
        env:
          CI: true
          # NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: setup github name/email
      #   run: |
      #     git config --local user.email "$(git log --format='%ae' HEAD^!)"
      #     git config --local user.name "$(git log --format='%an' HEAD^!)"

      # Beta release only when opening a PR to develop
      # - name: release-beta
      #   if: ${{ github.event_name == 'pull_request' && github.base_ref == 'master' }}
      #   run: yarn release:beta
      #   env:
      #     CI: true
      #     NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Release stable package version
      - name: version
        if: ${{ github.ref == 'refs/heads/main' }}
        run: yarn version --conventional-commits
        env:
          CI: true
          # NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
